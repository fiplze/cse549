Context:
1. Basic front-end techonique environment.
2. UI features:
	(1). Dynamic drop list.
	(2). Scatter charts for different requirements.
	(3). Interacter with user.
	(4). Input check.
3. Reference.

1. Basic font-end technique files.
(1) Javascript public library:
Jquery: jquery-1.8.3.min.js
D3js: d3.v3.min.js

(2) Javascript library which we implemented:
chart.js:  plot all the scatter charts.
data.js: using Ajax call to fetch data from server.
dropDownList.js: using Ajax call to fetch algorithm and attribute information from server. Change drop down list dynamicly based on user selection.

2. UI features.
(1) Dynamic drop list.
	a. Using Ajax call to fetch Json data from user, which contains all feasible algorithms and their relevent attribute.
	b. Listening to user selection of algorithm, and dynamic change the attributes drop down list.
	c. Get user's selections from drop down list and send request to server. Then get data to plot scatter charts.

(2) Scatter charts for different requirements.
	There are three type of scatter charts.
	a. Scatter Plot for a Single Algorithm
	Get user input from front end, send requests through Ajax call to get matched data from server. Get each node and plot them on svg using D3js.
	Requirement input value from user: {algorithm name, x axis, y axis}

	b. Scatter Plot for two Algorithms on the same metrics
	Get user input from front end, send requests through Ajax call to get matched data from server. Get each node and plot them on svg using D3js.
	Requirement input value from user: {algorithm 1, algorithm 2, a axis, y axis}

	c. Scatter Plot for two Algorithms on the same feature
	Get user input from front end, send requests through Ajax call to get matched data from server. Get each node and plot them on svg using D3js.
	Requirement input value from user: {algorithm 1, algorithm 2, attribute}

(3) Interacter with user.
	When user mouse put on the spot from any scatter charts. It will display the name of the node, the x attribute value and y attribute value, and other information that user designed to display.

(4) Input check.
	Using Javascript to check user selections' validation. For example, user are not allowed to choose empty content and click the submit button. There will be some alert message.

3. Reference.
For scatter charts partial reference from:
  D3js website scatter chart example:
  http://bl.ocks.org/weiglemc/6185069

