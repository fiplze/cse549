When the project runs, a simple server script listen to the specified localhost port. The Django preprocess all received requests of that port. In ‘server/server/urls.py’, we defined the url scheme. Our scripts handling all requests according to this URL scheme, then wrap results to desired format and send to user browsers.
Because we have different types of interactive charts, bar charts of algorithm comparison and a performance evaluation table, the URL scheme assigned three corresponding URLs to them. Every URL has scripts to process requests to it.
When user access the root URL, the server load all data to the memory and calculate all algorithm comparison charts. Instead of accessing file system, later data access will go to the memory directly, which is more faster and flexible. After that, the page redirect user to the main website page.
For requests of the interactive charts, the URL is ‘/get’. Because we have three types of chart plots. scripts of processing these requests defined three request types. Corresponding to single algorithm scatter chart, two algorithms scatter chart and two algorithms comparison chart. Firstly, JavaScripts in the client request algorithm types, server scripts give algorithm names and their attributes to the client. According to different picture types, the script gives different attributes. For example, in two algorithms comparison chart, we only give common attributes which make sense for comparison. Later on, this URL also response to the client requests for get attributes data, scripts return required data in JSON format to the client.
For requests of the bar charts, the URL is ‘/get_common’. This URL provides all algorithm shared attributes in JSON format to the client. The client can use a predefined image URL scheme to load calculated images. For example, if an attribute is ‘TPM’, predefined URL might be ‘static/img/TPM_bar.png’
For requests of the performance evaluation table, the URL is ‘/matrix’. It provides the algorithms’ performance data to the client.
